<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Custom my blog by NexT]]></title>
    <url>%2F2018%2F10%2F04%2Fcustommyblogbynext%2F</url>
    <content type="text"><![CDATA[NexT is a elegant theme for Hexo. InstallationIf you are familiar with Git, it is recommended that you use the latest version of the clone, and subsequent updates can be updated quickly via git pull instead of downloading the compressed package again.1$ git clone https://github.com/iissnan/hexo-theme-next themes/next Enable NexT theme is same mode as all Hexo themes are enabled. When the clone/download is complete, open the _config.yml, find the theme field, and change its value to next.1theme: next MenuAdd menuThe menu configuration consists of three parts, the first is the menu item (name and link), the second is the display text of the menu item, and the third is the icon corresponding to the menu item. NexT uses the icons provided by Font Awesome, and Font Awesome provides 600+ icons for most of the scenes without worrying about blurry icons on the Retina screen. Edit the theme profile \Hexo\theme\next\_config.yml to modify the following: Set the menu content, the corresponding field is menu. The format of the menu content is: item name: link. Where item name is a name that is not directly displayed on the page, it will be used to match icons and translations. The default menu item for NexT is (the item marked with ! indicates that you need to create this page manually): Key_value Set_value Remarks home home: / archives archives: /archives categories categories: /categories ! about about: /about ! tags tags: /tags ! commonweal commonweal: /404.html ! If you need to add a menu item, such as new menu. Then you need to add an item under the menu field:1newmenu: /newmenu_name || icon_name If your site is running in a subdirectory, remove the link prefix /. Set the icon of the menu item, the format is item name: item name: link || icon name, the icon name is the name of the Font Awesome icon. And following commands can be used to control whether to display the icon, you can set it to false to remove the icon.123# Enable/Disable menu icons.menu_icons:enable: true Local searchInstall PluginRun the following commands to install the hexo-generator-searchdb plugin.1$ npm install hexo-generator-searchdb --save Modify site profileAdd the following commands in _config.yml.12345search: pash: search.xml field: post format: html limit: 10000 Modify theme profileSet the \Hexo\theme\next\_config.yml, the corresponding field is local search.1234# Local search# Dependencies: https://github.com/flashlab/hexo-generator-searchlocal_search:enable: true PostWords count &amp; Reading timeInstall PluginRun the following commands to install the hexo-wordcount plugin.1$ npm install hexo-wordcount --save Modify theme profileSet the \Hexo\theme\next\_config.yml, the corresponding field is wordcount.12345678# Post wordcount display settings# Dependencies: https://github.com/willin/hexo-wordcountpost_wordcount:item_text: truewordcount: truemin2read: truetotalcount: falseseparated_meta: true Read moreWay 1 - Modify theme profileSet the \Hexo\theme\next\_config.yml, the corresponding field is auto_excerpt.123auto_excerpt: enable: true length: 150 Way 2 - Excerpt manually in postAdd &lt;!-- more --&gt; anywhere you want in post. Way 3 - Add descriptionAdd description: in title area in post.12345---title: titledate: year-month-daydescription: description for your post, it will show in homepage--- SidebarAvatarRSSCopyrightFooterHide Powered by Hexo and Theme - NexT.schemeWay 1 - Modify theme profilePowered by Hexo can be hided by setting the powered setting in \Hexo\theme\next\_config.yml to false.12# Hexo link (Powered by Hexo).powered: false Theme - NexT.sheme can be hided by changing true to false in the following two commands.1234# Theme &amp; scheme info link (Theme - NexT.scheme).enable: false# Version info of NexT after scheme info (vX.X.X)version: false Way 2 - Add comment symbolOpen \Hexo\theme\next\layout\_partials\footer.swig and add &lt;!-- --&gt; in the following commands.123456789101112131415161718&lt;!--&lt;div class="powered-by"&gt;&#123;##&#125;&#123;&#123; __('footer.powered', '&lt;a class="theme-link" target="_blank" href="https://hexo.io"&gt;Hexo&lt;/a&gt;') &#125;&#125;&#123;##&#125;&lt;/div&gt;&#123;% endif %&#125;&#123;% if theme.footer.powered and theme.footer.theme.enable %&#125;&lt;span class="post-meta-divider"&gt;|&lt;/span&gt;&#123;% endif %&#125;&#123;% if theme.footer.theme.enable %&#125;&lt;div class="theme-info"&gt;&#123;##&#125;&#123;&#123; __('footer.theme') &#125;&#125; &amp;mdash; &#123;##&#125;&lt;a class="theme-link" target="_blank" href="https://github.com/iissnan/hexo-theme-next"&gt;&#123;##&#125;NexT.&#123;&#123; theme.scheme &#125;&#125;&#123;##&#125;&lt;/a&gt;&#123;% if theme.footer.theme.version %&#125; v&#123;&#123; theme.version &#125;&#125;&#123;% endif %&#125;&#123;##&#125;&lt;/div&gt;--&gt; Add footer custom textOpen \Hexo\theme\next\_config.yml and add any word you want to add in the following commands.12# Any custom text can be defined here.custom_text: add_any_word_you_want_to_add_here]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[How to insert a picture in the blog]]></title>
    <url>%2F2018%2F10%2F03%2Fhowtoinsertapictureintheblog%2F</url>
    <content type="text"><![CDATA[Hexo is a great blog framework, but it’s very hard to insert local images in your blog. Because the html file of post and homepage are not in the same directory when the html file is generated. Post’s directory1\folder\public\year\month\day\title\index.html Homepage’s directory1\folder\public\index.html Post Asset FolderFor users who expect to regularly serve images and/or other assets, and for those who prefer to separate their assets on a post-per-post basis, Hexo also provides a more organized way to manage assets. This slightly more involved, but very convenient approach to asset management can be turned on by setting the post_asset_folder setting in _config.yml to true.1post_asset_folder: true With asset folder management enabled, Hexo will creat a folder every time you make a new post with the $ hexo new [layout] &lt;title&gt; command. This asset folder will have the same name as the markdown file associated with the post. Place all assets related to your post into the associated folder, and you will be able to reference them using a relative path, making for an easier and more convenient workflow. Install PluginRun the following commands to install the hexo-asset-image plugin.1$ npm install https://github.com/CodeFalling/hexo-asset-image --save After it finished, just use ![picture-title](title/image.jpg) to insert image.jpg. You also can use ![](title/image.jpg) to insert image.jpg without a picture title. Tag Plugins For Relative Path ReferencingReferencing images or other assets using normal markdown syntax and relative paths may cause them to display incorrectly on archive or index pages. Plugins have been created by the community to address this issue in Hexo 2. However, with the release of Hexo 3, several new tag plugins were added to core. These enable you to reference your assets more easily in posts:123&#123;% asset_path slug %&#125;&#123;% asset_img slug [title] %&#125;&#123;% asset_link slug [title] %&#125; For example, with post asset folders enabled, if you place an image example.jpg into your asset folder, it will not appear on the index page if you reference it using a relative path with regular ![](title/image.jpg) markdown syntax (however, it will work as expected in the post itself). The correct way to reference the image will thus be to use tag plugin syntax rather than markdown:1&#123;% asset_img image.jpg picture-title %&#125; This way, the image will appear both inside the post and on index and archive pages.]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Build a blog based on Hexo and GitHub Pages]]></title>
    <url>%2F2018%2F10%2F02%2Fbuildablogbasedonhexoandgithubpages%2F</url>
    <content type="text"><![CDATA[What is Hexo?Hexo is a fast, simple and powerful blog framework. You write posts in Markdown (or other languages) and Hexo generates static files with a beautiful theme in seconds. What is GitHub PagesGitHub Pages InstallationInstalling Hexo is quite easy. However, you do need to have a couple of other things installed first: -Git-Node.js If your computer already has these, congratulations! Just install Hexo with npm: 1$ sudo npm install -g hexo If not, please go to Git and Node.js download and run the installer. For Mac usersYou may encounter some problems when compiling. Please install Xcode from App Store first. SetupOnce Hexo is installed, run the following commands to initialise Hexo in the target &lt;folder&gt;. 123$ hexo init &lt;folder&gt;$ cd &lt;folder&gt;$ npm install ConfigureOnce initialised, you can find _config.yml in the target &lt;folder&gt;, and you can configure most settings here.Learn more &gt;&gt; . DeployBefore your first deployment, you will have to modify some settings in _config.yml. Run the following command to deploy your site to your servers (such as GitHub Pages). 1234deploy:type: gitrepository: https://github.com/username/username.github.io.gitbranch: master Note: each : followed by a space . $ hexo generate or $ hexo g$ hexo deploy or $ hexo d Next, terminal will prompt for username and password. After that, you can visit your site at username.github.io. If there is a error followed by $ hexo generate, run the following commands.1$ npm install hexo —save If there is a error followed by $ hexo deploy, run the following commands.12$ npm install hexo-deployer-git —save$ hexo g &amp;&amp; hexo d Commands1234$ hexo clean$ hexo g #hexo generate$ hexo s #hexo server$ hexo d #hexo deploy]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F10%2F01%2Fhelloworld%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Error example 2]]></title>
    <url>%2F2018%2F09%2F25%2Ferrorexample2%2F</url>
    <content type="text"><![CDATA[出租车计价本题要求根据某城市普通出租车收费标准编写程序进行车费计算。具体标准如下： 起步里程为3公里，起步费10元；超起步里程后10公里内，每公里2元；超过10公里以上的部分加收50%的回空补贴费，即每公里3元；营运过程中，因路阻及乘客要求临时停车的，按每5分钟2元计收（不足5分钟则不收费）。 输入格式：输入在一行中给出输入行驶里程（单位为公里，精确到小数点后1位）与等待时间（整数，单位为分钟），其间以空格分隔。 输出格式：在一行中输出乘客应支付的车费（单位为元），结果四舍五入，保留到元。 输入样例1：12.6 2 输出样例1：110 输入样例2：15.1 4 输出样例2：114 输入样例3：112.5 9 输出样例3：134 Program123456789101112131415161718192021222324252627282930313233#include &lt;stdio.h&gt;int price (float, int);int main() &#123; float m; int t; scanf("%f %d", &amp;m, &amp;t); printf("%d\n", price(m, t)); return 0;&#125;int price (float m, int t) &#123; float r = 0; if (m &lt;= 3) r = 10; else if (m &lt;= 10) r = 10+(m-3)*2; else r = 10+14+(m-10)*3; if (t &gt;= 5) r += 2*(t/5); //四舍五入：*10 %10 if if ((r*10)%10 &lt; 5) return r; else return (r+1);&#125; Error29行if (r*10%10 &lt; 5)报错：1234invalid operands to binary expression (&apos;float&apos; and &apos;float&apos;)printf(&quot;%f\n&quot;, (i*10)%10); ~~~~~~^~~1 error generated. Solution经检查%前的变量不能为float，需将%前的变量进行强制类型转换为int1234if ((int)(r*10)%10 &lt; 5) return (int)r;esle return (int)(r+1);]]></content>
      <categories>
        <category>C</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Error example 3]]></title>
    <url>%2F2018%2F09%2F25%2Ferrorexample3%2F</url>
    <content type="text"><![CDATA[求n以内最大的k个素数以及它们的和本题要求计算并输出不超过n的最大的k个素数以及它们的和。 输入格式：输入在一行中给出n(10≤n≤10000)和k(1≤k≤10)的值。 输出格式：1素数1+素数2+…+素数k=总和值 输入样例1：11000 10 输出样例1：1997+991+983+977+971+967+953+947+941+937=9664 输入样例2：112 6 输出样例2：111+7+5+3+2=28 Program123456789101112131415161718192021222324252627282930313233343536373839404142434445464748#include &lt;stdio.h&gt;int prime (int);int main () &#123; int i; int n, k; int cnt = 0; int sum = 0; scanf("%d %d", &amp;n, &amp;k); int p[k] = &#123;0&#125;; for (i = n; i &gt; 1; i --) &#123; if (prime(i) == 1) &#123; sum += i; p[cnt] = i; cnt ++; &#125; if (cnt == k) break; &#125; for (i = 0; i &lt; cnt; i ++) &#123; printf("%d", p[i]); if (i != cnt-1) printf("+"); &#125; printf("=%d\n", sum); return 0;&#125;int prime (int n) &#123; int r = 1; int i; if (n &lt; 2) r = 0; for (i = 2; i &lt; n; i ++) &#123; if (n%i == 0) r= 0; &#125; return r;&#125; Error13行报错：1234error: variable-sized object may not be initializedint p[k] = &#123;0&#125;; ^1 error generated. Solution经检查C语言中，数组长度必须在创建数组时指定，并且只能是一个常数，不能是变量。一旦定义了一个数组，系统将为它分配一个固定大小的空间，以后不能改变，称为静态数组，故采用动态数组1234567891011// Add before line 1#include &lt;stdlib.h&gt; // Add before line 9 int *p; // Add before line 11 p = (int*)malloc(k*sizeof(int)); // Add before line 31 free(p);]]></content>
  </entry>
  <entry>
    <title><![CDATA[Error example 1]]></title>
    <url>%2F2018%2F09%2F25%2Ferrorexample1%2F</url>
    <content type="text"><![CDATA[Program1234int i = 3;if (1 &lt; i &lt; 5)printf("TRUE"); Error仍然能输出TRUE，但出现如下warning：12345warning: result of comparison of constant 5 with boolean expressionis always true [-Wtautological-constant-out-of-range-compare]if (1 &lt; i &lt; 5) ~~~~~ ^ ~1 warning generated. Solution改为1 &lt; i &amp;&amp; i &lt; 5之后warning消失]]></content>
      <categories>
        <category>C</category>
      </categories>
  </entry>
</search>
